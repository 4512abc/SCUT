package org.example.mapper;

import org.apache.ibatis.annotations.Param;
import org.example.model.entity.Participation;

import java.util.List;
import java.util.Map;

public interface ParticipationMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table participation
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table participation
     *
     * @mbg.generated
     */
    int insert(Participation row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table participation
     *
     * @mbg.generated
     */
    int insertSelective(Participation row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table participation
     *
     * @mbg.generated
     */
    Participation selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table participation
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(Participation row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table participation
     *
     * @mbg.generated
     */
    int updateByPrimaryKeyWithBLOBs(Participation row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table participation
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(Participation row);
    /**
     * 根据用户ID和挑战ID联合查找参与记录
     *
     * @param userId 用户ID
     * @param challengeId 挑战ID
     * @return 参与记录列表
     */
    Participation selectByUserIdAndChallengeId(@Param("userId") Long userId, @Param("challengeId") Long challengeId);

    List<Map<String, Object>> selectTopUsersByChallengeComplete(@Param("limit") int limit);

//    由TOTORO编辑，通过用户id和游标分页，查询用户参加过的挑战信息
    List<Participation> selectParticipationsByUserId(@Param("params") Map<String, Object> params);

    /**
     * 根据挑战ID统计参与记录的数目
     *
     * @param challengeId 挑战ID
     * @return 记录数目
     */
    int countByChallengeId(@Param("challengeId") Long challengeId);

    /**
     * 根据挑战ID删除参与记录
     *
     * @param challengeId 挑战ID
     * @return 删除的记录数
     */
    int deleteByChallengeId(@Param("challengeId") Long challengeId);

    /**
     * 根据用户id获取用户参与的挑战数量
     * @param userId 用户ID
     * @return 用户参与的挑战数量
     */
    Integer selectUserChallengeCount(@Param("userId") Long userId);


}
