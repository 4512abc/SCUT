<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.mapper.AnnouncementMapper">
  <resultMap id="BaseResultMap" type="org.example.model.entity.Announcement">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="publisher_id" jdbcType="BIGINT" property="publisherId" />
    <result column="push_type" jdbcType="TINYINT" property="pushType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="org.example.model.entity.Announcement">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, title, type, publisher_id, push_type, create_time, update_time
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from announcement
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from announcement
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="org.example.model.entity.Announcement">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into announcement (id, title, type, 
      publisher_id, push_type, create_time, 
      update_time, content)
    values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT}, 
      #{publisherId,jdbcType=BIGINT}, #{pushType,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.example.model.entity.Announcement" useGeneratedKeys="true" keyProperty="id">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into announcement
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="publisherId != null">
        publisher_id,
      </if>
      <if test="pushType != null">
        push_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="publisherId != null">
        #{publisherId,jdbcType=BIGINT},
      </if>
      <if test="pushType != null">
        #{pushType,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.example.model.entity.Announcement">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update announcement
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="publisherId != null">
        publisher_id = #{publisherId,jdbcType=BIGINT},
      </if>
      <if test="pushType != null">
        push_type = #{pushType,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.example.model.entity.Announcement">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update announcement
    set title = #{title,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      publisher_id = #{publisherId,jdbcType=BIGINT},
      push_type = #{pushType,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.example.model.entity.Announcement">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update announcement
    set title = #{title,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      publisher_id = #{publisherId,jdbcType=BIGINT},
      push_type = #{pushType,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

<!--TOTORO-->
  <select id="selectAnnouncements" parameterType="map" resultMap="BaseResultMap">
    SELECT *
    FROM announcement
    WHERE type = 2 <!-- 用户端公告 -->
    <if test="params.lastCursor != null and params.lastCursor != 0">
      AND id &lt;= #{params.lastCursor}
    </if>
    ORDER BY id DESC
    <if test="params.size != null and params.size > 0">
      LIMIT #{params.size}
    </if>
  </select>

  <select id="selectAnnouncementsmore" parameterType="map" resultMap="BaseResultMap">
    SELECT * FROM announcement
    WHERE 1=1
    <if test="params.lastCursor != null and params.lastCursor != 0">
      AND id &lt;= #{params.lastCursor}
    </if>
    ORDER BY id DESC
    <if test="params.size != null and params.size > 0">
      LIMIT #{params.size}
    </if>
  </select>

<!--  TOTORO-->
  <select id="selectAnnouncements_1" resultMap="BaseResultMap">
    SELECT *
    FROM announcement
    WHERE type = 1
    ORDER BY update_time DESC
    LIMIT 5
  </select>
<!--  -->

  <select id="selectByIds" resultMap="ResultMapWithBLOBs">
    SELECT
    <include refid="Base_Column_List" />,
    <include refid="Blob_Column_List" />
    FROM announcement
    WHERE id IN
    <foreach collection="ids" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
  </select>

<select id="selectAnnouncementsByConditions" parameterType="map" resultMap="BaseResultMap">
    <!--用于公告的搜索-->
    SELECT *
    FROM announcement
    WHERE 1=1
    <if test="title != null and title != ''">
        AND title LIKE CONCAT('%', #{title}, '%')
    </if>
    <if test="type != null">
        AND type = #{type}
    </if>
    <if test="startTime != null and endTime != null">
        AND create_time BETWEEN #{startTime} AND #{endTime}
    </if>
    ORDER BY id DESC
</select>

</mapper>