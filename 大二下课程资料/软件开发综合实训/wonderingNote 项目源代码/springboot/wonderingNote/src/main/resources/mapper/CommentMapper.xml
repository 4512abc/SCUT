<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.mapper.CommentMapper">
  <resultMap id="BaseResultMap" type="org.example.model.entity.Comment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="is_root" jdbcType="TINYINT" property="isRoot" />
    <result column="post_id" jdbcType="BIGINT" property="postId" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="like_count" jdbcType="INTEGER" property="likeCount" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="root_id" jdbcType="BIGINT" property="rootId" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, user_id, is_root, post_id, parent_id, content, like_count, status, create_time,
    root_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    from comment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from comment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="org.example.model.entity.Comment" useGeneratedKeys="true" keyProperty="id">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into comment (id, user_id, is_root,
    post_id, parent_id, content,
    like_count, status, create_time,
    root_id)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{isRoot,jdbcType=TINYINT},
    #{postId,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT}, #{content,jdbcType=VARCHAR},
    #{likeCount,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP},
    #{rootId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="org.example.model.entity.Comment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="isRoot != null">
        is_root,
      </if>
      <if test="postId != null">
        post_id,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="likeCount != null">
        like_count,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="rootId != null">
        root_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="isRoot != null">
        #{isRoot,jdbcType=TINYINT},
      </if>
      <if test="postId != null">
        #{postId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="likeCount != null">
        #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rootId != null">
        #{rootId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.example.model.entity.Comment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update comment
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="isRoot != null">
        is_root = #{isRoot,jdbcType=TINYINT},
      </if>
      <if test="postId != null">
        post_id = #{postId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="likeCount != null">
        like_count = #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rootId != null">
        root_id = #{rootId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.example.model.entity.Comment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update comment
    set user_id = #{userId,jdbcType=BIGINT},
    is_root = #{isRoot,jdbcType=TINYINT},
    post_id = #{postId,jdbcType=BIGINT},
    parent_id = #{parentId,jdbcType=BIGINT},
    content = #{content,jdbcType=VARCHAR},
    like_count = #{likeCount,jdbcType=INTEGER},
    status = #{status,jdbcType=TINYINT},
    create_time = #{createTime,jdbcType=TIMESTAMP}
    root_id = #{rootId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectRootCommentsByPostId" resultMap="BaseResultMap">
    SELECT * FROM comment
    WHERE post_id = #{params.postId}
    AND root_id = id <!-- 根评论的 root_id 等于自身 id -->
    <if test="params.lastCursor != null and params.lastCursor != 0">
      AND id &lt;= #{params.lastCursor}
    </if>
    ORDER BY id DESC
    LIMIT #{params.size}
  </select>

  <select id="selectChildCommentsByRootId" resultMap="BaseResultMap">
    SELECT * FROM comment
    WHERE root_id = #{rootId}
    AND id != root_id <!-- 排除根评论自身 -->
    <if test="lastCursor != null and lastCursor != 0">
      AND id &lt;= #{lastCursor}
    </if>
    ORDER BY id DESC
    LIMIT #{size}
  </select>

  <select id="selectChildCommentCountByRootId" resultType="int">
    SELECT COUNT(*) FROM comment
    WHERE root_id = #{rootId}
    AND id != root_id <!-- 排除根评论自身 -->
  </select>

  <select id="selectFirstChildCommentByRootId" resultMap="BaseResultMap">
    SELECT * FROM comment
    WHERE root_id = #{rootId}
    AND parent_id = root_id
    AND id != root_id <!-- 排除根评论自身 -->
    ORDER BY id DESC
    LIMIT 1
  </select>

  <select id="selectCommentsByIds" resultMap="BaseResultMap">
    SELECT * FROM comment
    WHERE id IN
    <foreach collection="ids" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
    AND status = 1 <!-- 审核通过 -->
  </select>

  <select id="selectCommentsByUserId" resultMap="BaseResultMap">
    SELECT * FROM comment
    WHERE user_id = #{params.userId}
    <if test="params.lastCursor != null and params.lastCursor != 0">
      AND id &lt;= #{params.lastCursor}
    </if>
    ORDER BY id DESC
    LIMIT #{params.size}
  </select>

  <!--  由TOTORO编辑-->
  <!-- CommentMapper.xml -->
  <select id="selectByPostId" resultMap="BaseResultMap">
    SELECT * FROM comment WHERE post_id = #{postId}
  </select>

  <delete id="deleteByIds">
    DELETE FROM comment WHERE id IN
    <foreach collection="ids" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
  </delete>
  <!--  由TOTORO编辑-->
    <select id="selectCommentCountByPostId" resultType="int">
        <!-- 根据 post_id 查询所有被检索到的条目数量 -->
        SELECT COUNT(*) FROM comment
        WHERE post_id = #{postId}
    </select>

  <!-- 由TOTORO编写 -->
  <select id="selectUserCommentCount" parameterType="java.lang.Long" resultType="java.lang.Integer">
    SELECT COUNT(*) FROM comment WHERE user_id = #{userId}
  </select>


</mapper>
