<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.mapper.TeamMemberMapper">
  <resultMap id="BaseResultMap" type="org.example.model.entity.TeamMember">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="team_id" jdbcType="BIGINT" property="teamId" />
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="role" jdbcType="TINYINT" property="role" />
    <result column="join_time" jdbcType="TIMESTAMP" property="joinTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="org.example.model.entity.TeamMember">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="other_info" jdbcType="LONGVARCHAR" property="otherInfo" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    team_id, user_id, role, join_time
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    other_info
  </sql>
  <select id="selectByPrimaryKey" parameterType="org.example.model.entity.TeamMemberKey" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from team_member
    where team_id = #{teamId,jdbcType=BIGINT}
    and user_id = #{userId,jdbcType=BIGINT}
  </select>
  <select id="selectByTeamId" resultMap="ResultMapWithBLOBs">
    SELECT
    <include refid="Base_Column_List" />,
    <include refid="Blob_Column_List" />
    <include refid="Blob_Column_List" />
    FROM team_member
    WHERE team_id = #{teamId}
    <if test="lastCursor != null and lastCursor != ''">
      AND user_id >= #{lastCursor}
    </if>
    ORDER BY user_id ASC
    LIMIT #{size}
  </select>
  <!-- selectByUserId由TOTORO编辑！！！ -->
  <select id="selectByUserId" resultMap="ResultMapWithBLOBs">
    SELECT <include refid="Base_Column_List" />, <include refid="Blob_Column_List" />
    FROM team_member
    WHERE user_id = #{params.userId}
    <if test="params.lastCursor != null and params.lastCursor != 0">
      AND team_id &lt;= #{params.lastCursor}
    </if>
    ORDER BY team_id DESC
    LIMIT #{params.size}
  </select>
<!--  隔开效果！！！-->
  <select id="selectByTeamIdAndUserId" parameterType="map" resultMap="ResultMapWithBLOBs">
    <!-- 根据teamId和userId联合查找记录 -->
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from team_member
    where team_id = #{teamId,jdbcType=BIGINT}
    and user_id = #{userId,jdbcType=BIGINT}
  </select>
  <select id="selectUserIdsByTeamId" parameterType="java.lang.Long" resultType="java.lang.Long">
    <!-- 根据teamId查询所有记录，提取其中的userId为列表返回 -->
    SELECT user_id
    FROM team_member
    WHERE team_id = #{teamId,jdbcType=BIGINT}
  </select>
  <select id="countByTeamId" parameterType="java.lang.Long" resultType="java.lang.Integer">
    <!-- 根据teamId统计记录数量 -->
    SELECT COUNT(*)
    FROM team_member
    WHERE team_id = #{teamId,jdbcType=BIGINT}
</select>
  <delete id="deleteByPrimaryKey" parameterType="org.example.model.entity.TeamMemberKey">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from team_member
    where team_id = #{teamId,jdbcType=BIGINT}
    and user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="org.example.model.entity.TeamMember">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into team_member (team_id, user_id, role,
    join_time, other_info)
    values (#{teamId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{role,jdbcType=TINYINT},
    #{joinTime,jdbcType=TIMESTAMP}, #{otherInfo,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.example.model.entity.TeamMember">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into team_member
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="teamId != null">
        team_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="joinTime != null">
        join_time,
      </if>
      <if test="otherInfo != null">
        other_info,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="teamId != null">
        #{teamId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="role != null">
        #{role,jdbcType=TINYINT},
      </if>
      <if test="joinTime != null">
        #{joinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="otherInfo != null">
        #{otherInfo,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.example.model.entity.TeamMember">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update team_member
    <set>
      <if test="role != null">
        role = #{role,jdbcType=TINYINT},
      </if>
      <if test="joinTime != null">
        join_time = #{joinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="otherInfo != null">
        other_info = #{otherInfo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where team_id = #{teamId,jdbcType=BIGINT}
    and user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.example.model.entity.TeamMember">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update team_member
    set role = #{role,jdbcType=TINYINT},
    join_time = #{joinTime,jdbcType=TIMESTAMP},
    other_info = #{otherInfo,jdbcType=LONGVARCHAR}
    where team_id = #{teamId,jdbcType=BIGINT}
    and user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.example.model.entity.TeamMember">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update team_member
    set role = #{role,jdbcType=TINYINT},
    join_time = #{joinTime,jdbcType=TIMESTAMP}
    where team_id = #{teamId,jdbcType=BIGINT}
    and user_id = #{userId,jdbcType=BIGINT}
  </update>
</mapper>

