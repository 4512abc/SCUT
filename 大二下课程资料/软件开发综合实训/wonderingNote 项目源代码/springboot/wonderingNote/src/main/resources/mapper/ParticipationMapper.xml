<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.mapper.ParticipationMapper">
  <resultMap id="BaseResultMap" type="org.example.model.entity.Participation">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="challenge_id" jdbcType="BIGINT" property="challengeId" />
    <result column="complete_time" jdbcType="TIMESTAMP" property="completeTime" />
    <result column="complete_state" jdbcType="TINYINT" property="completeState" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="org.example.model.entity.Participation">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="evidence" jdbcType="LONGVARCHAR" property="evidence" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, user_id, challenge_id, complete_time, complete_state
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    evidence
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from participation
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from participation
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="org.example.model.entity.Participation" useGeneratedKeys="true" keyProperty="id">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      id自增，已修改，请注意
    -->
    insert into participation (user_id, challenge_id,
    complete_time, complete_state, evidence
    )
    values (#{userId,jdbcType=BIGINT}, #{challengeId,jdbcType=BIGINT},
    #{completeTime,jdbcType=TIMESTAMP}, #{completeState,jdbcType=TINYINT}, #{evidence,jdbcType=LONGVARCHAR}
    )
  </insert>
  <insert id="insertSelective" parameterType="org.example.model.entity.Participation">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into participation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="challengeId != null">
        challenge_id,
      </if>
      <if test="completeTime != null">
        complete_time,
      </if>
      <if test="completeState != null">
        complete_state,
      </if>
      <if test="evidence != null">
        evidence,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="challengeId != null">
        #{challengeId,jdbcType=BIGINT},
      </if>
      <if test="completeTime != null">
        #{completeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="completeState != null">
        #{completeState,jdbcType=TINYINT},
      </if>
      <if test="evidence != null">
        #{evidence,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.example.model.entity.Participation">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update participation
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="challengeId != null">
        challenge_id = #{challengeId,jdbcType=BIGINT},
      </if>
      <if test="completeTime != null">
        complete_time = #{completeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="completeState != null">
        complete_state = #{completeState,jdbcType=TINYINT},
      </if>
      <if test="evidence != null">
        evidence = #{evidence,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.example.model.entity.Participation">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update participation
    set user_id = #{userId,jdbcType=BIGINT},
    challenge_id = #{challengeId,jdbcType=BIGINT},
    complete_time = #{completeTime,jdbcType=TIMESTAMP},
    complete_state = #{completeState,jdbcType=TINYINT},
    evidence = #{evidence,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.example.model.entity.Participation">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update participation
    set user_id = #{userId,jdbcType=BIGINT},
    challenge_id = #{challengeId,jdbcType=BIGINT},
    complete_time = #{completeTime,jdbcType=TIMESTAMP},
    complete_state = #{completeState,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
<!--  TOTORO编辑-->
  <select id="selectParticipationsByUserId" parameterType="map" resultMap="BaseResultMap">
    SELECT *
    FROM participation
    WHERE user_id = #{params.userId}
    <if test="params.lastCursor != null and params.lastCursor != 0">
      AND id &lt;= #{params.lastCursor}
    </if>
    ORDER BY id DESC
    <if test="params.size != null">
      LIMIT #{params.size}
    </if>
  </select>
<!--  隔开-->

  <select id="selectTopUsersByChallengeComplete" resultType="map">
    SELECT user_id, COUNT(*) AS number
    FROM participation
    WHERE complete_state = 1
    GROUP BY user_id
    ORDER BY number DESC
    LIMIT #{limit}
  </select>

<!--  根据用户id和挑战id查询-->
  <select id="selectByUserIdAndChallengeId" resultMap="ResultMapWithBLOBs">
    SELECT *
    FROM participation
    WHERE user_id = #{userId}
    AND challenge_id = #{challengeId}
  </select>

<!--  根据挑战id查询条目数量-->
  <select id="countByChallengeId" parameterType="java.lang.Long" resultType="int">
    SELECT COUNT(*)
    FROM participation
    WHERE challenge_id = #{challengeId,jdbcType=BIGINT}
</select>
  <!--  根据挑战id删除参与记录-->
  <delete id="deleteByChallengeId" parameterType="java.lang.Long">
    DELETE FROM participation
    WHERE challenge_id = #{challengeId,jdbcType=BIGINT}
  </delete>



  <!-- 由TOTORO编写 -->
  <select id="selectUserChallengeCount" parameterType="java.lang.Long" resultType="java.lang.Integer">
    SELECT COUNT(*) FROM participation WHERE user_id = #{userId}
  </select>

</mapper>
