<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.mapper.LikeMapper">
  <select id="selectByUserIdAndPostId" resultType="org.example.model.entity.Like">
    SELECT * FROM `like` WHERE user_id = #{userId} AND target_id = #{postId} AND target_type = 'BLOG'
  </select>
<!--  TOTORO-->
  <select id="selectByIds" resultType="org.example.model.entity.Like">
    SELECT * FROM `like` WHERE id IN
    <foreach collection="ids" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
  </select>
<!--  -->
  <resultMap id="BaseResultMap" type="org.example.model.entity.Like">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="target_type" jdbcType="CHAR" property="targetType" />
    <result column="target_id" jdbcType="BIGINT" property="targetId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, user_id, target_type, target_id, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from `like`
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from `like`
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="org.example.model.entity.Like" useGeneratedKeys="true" keyProperty="id">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into `like` (id, user_id, target_type,
      target_id, create_time)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{targetType,jdbcType=CHAR}, 
      #{targetId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="org.example.model.entity.Like">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into `like`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="targetType != null">
        target_type,
      </if>
      <if test="targetId != null">
        target_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="targetType != null">
        #{targetType,jdbcType=CHAR},
      </if>
      <if test="targetId != null">
        #{targetId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.example.model.entity.Like">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update `like`
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="targetType != null">
        target_type = #{targetType,jdbcType=CHAR},
      </if>
      <if test="targetId != null">
        target_id = #{targetId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.example.model.entity.Like">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update `like`
    set user_id = #{userId,jdbcType=BIGINT},
      target_type = #{targetType,jdbcType=CHAR},
      target_id = #{targetId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
<!--  通过用户id来筛选处究竟是谁点赞了就好了！！！由TOTORO编写！！！-->
  <select id="selectLikedPostsByUserId" parameterType="map" resultMap="BaseResultMap">
    SELECT *
    FROM `like`
    WHERE user_id = #{params.userId}
    AND target_type = 'BLOG'
    <if test="params.lastCursor != null and params.lastCursor != 0">
        AND id &lt;= #{params.lastCursor}
    </if>
    ORDER BY id DESC
    LIMIT #{params.size}
  </select>
<!--由TOTORO编写-->

  <!-- LikeMapper.xml -->
  <!--由TOTORO编写-->
  <select id="selectByTargetIdAndType" resultMap="BaseResultMap">
    SELECT * FROM `like`
    WHERE target_id = #{targetId} AND target_type = #{targetType}
  </select>
  <!--由TOTORO编写-->
  <delete id="deleteByIds">
    DELETE FROM `like` WHERE id IN
    <foreach collection="ids" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
  </delete>
<!--  -->


  <select id="countByTargetIdAndType" resultType="int">
    <!--
      根据 target_id 和 target_type 统计记录数
    -->
    SELECT COUNT(*) 
    FROM `like`
    WHERE target_id = #{targetId}
    AND target_type = #{targetType}
</select>

</mapper>