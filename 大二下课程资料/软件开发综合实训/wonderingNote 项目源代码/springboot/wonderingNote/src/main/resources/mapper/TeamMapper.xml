<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.mapper.TeamMapper">
  <resultMap id="BaseResultMap" type="org.example.model.entity.Team">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="logo" jdbcType="VARCHAR" property="logo" />
    <result column="creator_id" jdbcType="BIGINT" property="creatorId" />
    <result column="max_members" jdbcType="INTEGER" property="maxMembers" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>

  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, name, logo, creator_id, max_members, create_time
  </sql>

  <!-- 自动生成的基本CRUD操作 -->
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from team
    where id = #{id,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from team
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="insert" parameterType="org.example.model.entity.Team" useGeneratedKeys="true" keyProperty="id">
    insert into team (name, logo, creator_id, max_members, create_time)
    values (#{name,jdbcType=VARCHAR}, #{logo,jdbcType=VARCHAR},
    #{creatorId,jdbcType=BIGINT}, #{maxMembers,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP})
  </insert>

  <insert id="insertSelective" parameterType="org.example.model.entity.Team">
    insert into team
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="logo != null">
        logo,
      </if>
      <if test="creatorId != null">
        creator_id,
      </if>
      <if test="maxMembers != null">
        max_members,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="logo != null">
        #{logo,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null">
        #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="maxMembers != null">
        #{maxMembers,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="org.example.model.entity.Team">
    update team
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="logo != null">
        logo = #{logo,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null">
        creator_id = #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="maxMembers != null">
        max_members = #{maxMembers,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateByPrimaryKey" parameterType="org.example.model.entity.Team">
    update team
    set name = #{name,jdbcType=VARCHAR},
    logo = #{logo,jdbcType=VARCHAR},
    creator_id = #{creatorId,jdbcType=BIGINT},
    max_members = #{maxMembers,jdbcType=INTEGER},
    create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!-- 通过我创建的群组游标分页查询群组信息 -->
<!--  由TOTORO编辑-->
  <select id="selectByParams" parameterType="map" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List"/>
    FROM team
    WHERE creator_id = #{params.userId}
    <if test="params.lastCursor != null and params.lastCursor != 0">
      AND id &lt;= #{params.lastCursor}
    </if>
    ORDER BY id DESC
    LIMIT #{params.size}
  </select>
<!--  -->

  <!-- 新增：根据群组ID列表批量查询群组信息 -->
  <!--  由TOTORO编辑！！！-->
  <select id="selectByIds" parameterType="list" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List"/>
    FROM team
    WHERE id IN
    <foreach collection="ids" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
  </select>
<!--  隔开-->
    <!-- 新增的name和create_time检索方法 -->
    <select id="selectByNameAndCreateTimeRange" parameterType="map" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM team
        WHERE 1=1
        <if test="name != null and name != ''">
            AND name LIKE CONCAT('%', #{name}, '%')
        </if>
      <if test="startTime != null and endTime != null">
        AND create_time BETWEEN #{startTime} AND #{endTime}
      </if>
        ORDER BY create_time DESC
    </select>
</mapper>
